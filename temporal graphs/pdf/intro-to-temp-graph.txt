An Introduction to Temporal Graphs: An Algorithmic Perspective
https://www.tandfonline.com/doi/full/10.1080/15427951.2016.1177801

Abstract 
    - A temporal graph can be informally understood as a graph that changes with time 
    - When time is discrete and only the r/s between the participating entities may change (and not the entities themselves), a temporal graph may be viewed 
    as a sequence G_1 ... G_l of static graphs over the same set of nodes v
        > Assumption of static object may be troublesome due to gripper state changes, so need to model state change as a change in r/s within gripper itself
    - While intuitively simple, temporal dimensions presents difficulties within graph theory as it greatly mutates graph properties and problem along its(temporal) dimension 
    - This paper looks at advances in temporal graphs and its problem 

Introduction 
    - Graphs can be simply thought of as a model for a set of objects and a set of pairwise relations between them 
        > For more complex relationships, labeled graphs are used, whereby edges are assigned some values from a given domain 
    - A temporal graph can be informally understood as a graph that changes with time (dynamic)
        > Dynamicity of the network can be a result of randomness, where the interest is on determining "good" properties of the dynamic network that holds with high probability
            * with high probability in this case means a probability of at least (1 - \frac{1}{n^c} for some constant c >= 1, where n is |nodes| ) 
    - In terms of modelling, they can be seen as a special case of labeled graphs, in which labels capture some measure of time 
        > Inversely, it is also true that any property of a graph labeled from a discrete set of labels corresponds to some temporal property if interpreted appriopriately
            - For eg, a proper edge-coloring ( no 2 adj edge share same color ) corresponds to a temporal graph in which no 2 adj edges share a common time-label 
            ( no 2 adj edg appear at the same time XOR r/s )
    - Temporal graph wrt Combinatorial Optimisation Complexities
        > It is suggested that temporal versions of comb Optimisation problems are accompanied by increases in complexity [Section 8]
        > max-flow and min-cut theorem holds with unit capacities for time-respecting paths 
            * time-respecting path ( AKA temporal path, journey ) is like a usual path whose edges, additionally, uses strictly increasing times (or non-decreasing)
        > Additionally, [38] proved that in temporal graphs, the classical formulation of Menger's theorem is violated and the computation of the number of node-disjoint s-z paths becomes NP-complete 
            - A reformulation of Menger's theorem which is valid for all temporal graph was achieved in [49]. [Results in Section 3]
            * Menger's theorem is the analogue of the max-flow min-cut theorem for undirected graphs 
                > it states that the max number of node-disjoint s-z paths is equal to the min number of nodes needed to separate s from z 
    - Temporal Graphs in Distributed systems: Contributions
        > One contribution by Dist systems is presented in offline centralised algorithms for k-token dissemnication problem
            - In k-token dissemination, there are k distinct pieces of information (tokens) that are initially present in some distributed process
            - the problem is to disseminate all the k tokens to all the processes in the dynamic network, under the constraint that on token can go through an edge per reconstructed
            - This is further elaborated in Section 4
        > Another contribution by Dist system concerns the investigation of how instantaneous properties ( or properties satisfied for some larger but restricted time-windows ) relate to global 
        properties of temporal graph 
            - Such properties may be:  
                1: continuously connected instances
                2: guaranteed connectivity 
                3: guaranteed propagation of information in a given time-window length (holding for all times)
                4: small instantaneuos diameter 
            - The goal is to determine whether these properties imply some "good" temporal-connectivty properties of the temporal graph as a whole, for example a small temporal diameter
            - All these, together with the novel notions and metrics that have been proposed for capturing such properties formally, are presented in Section 5
    - Designing an "efficient" temporal graph, given some requirements that the graph should meet 
        > This problem is studied in [49], and authors introduced several interesting cost-minimising parameters for optimal temporal network design 
            - One of the parameters is the temporality of a graph G
                > The goal here is to create a temporal version of G minimising the max number of labels of an edge 
            - The other is the temporal cost of G
                > The goal is to minimise the total number of label used 
        > Optimisation of these parameters has to be performed subject to some connectivity constraint 
            - Several upper and lower bounds for the temporality of some basic graph families (rings, directed acyclic graphs, trees) have been proven by these connectivity constraint
            - Trade-off between temporality and max label of rings are proven too
            - There exists a generic method for computing a lower bound of the temporality of an arbitary graph G wrt the constraint of preserving a time-respecting analogue of every 
            simple path of G 
            - These constraints also proved that the temporal cost wrt the constraint of preserving at least on time-respecting path from u to v whenever v is reachable from u in G is APX-hard
            - Most results are discussed in Section 6
    - Recurrent and periodic graohs
        > This family of graph underlie many real-world system (like transport system)
        > These graphs usually have the convenient property of being susceptible to a succint representation of their evolution 
            * Eg there could be a set of functions (i.e linear functions) describing/generating the availbility times of the edges 
        > These graphs are further discussed in Section 8
    - Random temporal graphs 
        > This is another succintly representable model for which labels are chosen according to some probability distribution 
        > This is motivated by the fact that the dynamicity of a great variety of real temporal networks is the rsult of some underlying random process 
            - Furthermore, randomness can usually simplify the understanding of the behaviour of several interesting network properties 
                > Eg many of the average properties of Erdos-Renyi random graph model can be calculated exactly in the limit
            - Additionally they can assist the efficient design of temporal graph with a desired property (by sacrificing correctness to hold w.h.p)
                > Eg to have for all (u,v) a time-respecting path from u to v 
        > As such randomness is a valuable tool in the study of temporal graph 
            * I think this is where i visualise Factor graphs to come in! 
        > Section 9 gives a brief introduction to such models 
        > Section 2 also provides all necessary preliminaries 
    - Further studies beyond the paper {read if have time} 
        > [33] gives an extensive overview of the literature realted to temporal networks from a diverse range of scientific domains 
        > [32] delves into the development of methods, systems modeled and questions addressed in the priod 2012-2015
        > Appllications of temporal graph are discussed in [30]
        > [40] utilises temporal graph to represent real datasets
            * this papaer shows how various node metrics can be used, and gioves a static representation of a temporal graph {might be important to read this paper}
        > [17] studies the flooding time (info dissemination) in the following type of edge-Markovian temporal graphs [may be an impt paper for IP too]
        > [31,68,37] looks at temporal graph generation with a distribution, where graph at every timestep is drawn from said distribution independently at random [impt paper too]
        > [20,35] looks at a particular model of random temporal graph known as random phonecall model, in which at each nod at each step can communicate with a random neighbor 
            * might help with better (or more efficient and effective) dissemination of information 
        > [73, 25] takes the approach of assuming the presence of an edge in a (or several) given time interval [t_s,t_e], not just for discrete steps [ may improve efficiency ]
            - [39] takes the same approach, but treat travel-times as time-dependent 
        > [1] studies Dynamic Map Visitation problem, in which a team of agents (if we consider the arm and gripper as cooperating agents) operates in a dynamic env and must 
        visit a collection of critical location (waypoints in our case) ASAP

Section 2 : Modelling and Basic Properties 
    - When time is assumed to be DISCRETE, a temporal graph is just a static graph {G = (V, E)} where every edge labeled with 0>= natural numbers 
        > Labels of edge may be viewed as the times at which the edge is available 
            - Eg a graph with no labels is never available, whereas an edge with labels of all even natural numbers is available at all even times 
            - Labels can corr. to any unit of time (hierarchical nature, non-euc methods may be used to better represent these) 
        * what is we model these labels as a spread of probability over time [multi-gaus] where by P(e|T=t) represent the probability where edge is present (becomes a multi-classification task)
    - There are several ways of modeling formally discrete temporal graphs 
        1: consider an underlying static graph G = (V,E) together with a labeling \lambda : E -> 2^N of G assigning every edge a set of natural numbers 
            > G wrt to \lambda will be \lambda(G)
            > Useful notation when one wants to explicitly refer to and study properties of the labels of the temporal graph 
                * Useful for proofs of correctness or O(.) calculation 
                - Eg:   
                    a: multiset of all labels of \lambda(G) can be denoted as \lambda(E) 
                    b: their cardinality defined as |\lambda| = sum[e in E] |\lambda(e)|
                    c: max, min of labels as \lambda_max = max{l in \lambda(E)} (and v.v for min)
                    d: lifetime of graph can be defined as \alpha(G) = \lambda_max - \lambda_min + 1 
        2: we can also take the ordered pair of disjoint sets (V,A) approach s.t A \subset ({V choose 2} x N) for graph or A \subset ({V^2 \ {(u,u) : u in V}} x N) for digraphs 
            > Set A is known as the set of time-edges and can be used to refer to the structure of the temporal graph at a particular time 
                - A(t) can denote the set of edges present at time t, and can be used to define the temporal graph at time t, a static graph D(t) = (V,A(t))
                - Then the temporal graph in this case will be viewed as a sequenceof static graphs (like pseudo-demos and demos in IP)
        3: take the approach of expanding in time the whole temporal garph and obtain an equivalent static graph without losing any information (then becomes supervised learning)
            > Reason for doing this is so that static graphs are easier to handle (more techinques available) 
            > This approch tackles the problem by first doing STATIC EXPANSION on temporal graph to obtain a static graph, then applying existing techniques to analyse them 
                - Formally, Static Expansion of a temporal graph D = (V,A) is a DAG H = (S,E) which is defined by:
                    > V = {u_1 ... u_n} -> S = {u_ij : \lambda_min - 1 <= i <= \lambda_max, 1 <= j <= n} and E = {(u_(i-1)j, u_ij') : \lambda_min <= i <= \lambda_max & (u_j, u_j' in A(i))}
                    > In plain terms, at every discrete time step, we create a copy of V representing the instances of the nodes at time t 
                        - we may the discrete time steps as levels or rows from top to bottom, with every level containing a copy of V
                    > Then outgoing edges are added from time-nodes of one level to time-nodes of the level below it (to rep the linear temporal nature ,theres a word for this in graph theory)
                        - in particular, we connect a time-node u_(i-1)j to its own subsequent copy u_ij and to every time-node u_ij' s.t (u_j,u_j') is an edge of the temporal graph at time i
                    > Since this construction includes all possible vertical edges from a node to its own subsequent instances, these edges helps nodes 'preserve' their own history in time, 
                    modelling its reflective temporal r/s (actions in IP)
    - Journeys 
        > Joruney in a temporal graph  can be thought of a redefinition of Paths in static graph 
        > A temporal walk W of a temporal graph D = (V,A) is an alternating sequence of nodes and times (u_1,t_1 ... u_k-1, t_k-1, u_k) where ((u_i, u_i+1), t_i) in A, for all 
        > 1 <= i <= k-1, and t_i < t_i+1 for all 1<= i <= k-2
            - we call t_k-1 - t_1 + 1 the duration of the walk W, t_1 its departure time and t_k-1 its arrival time 
        > A Journey (or temporal/time-respecting path) J is then a temporal walk with pairwise distinct nodes
            - In plain words, a journey of D is a path of the underlying static graph of D that uses strictly increasing edge-labels
        > Foremost Journey
            - A u-v journey J is called FOREMOST from time t in N if it departs after time t and its arrival time is minimised 
        > Temporal Distance
            - The temporal distance from a node u at time t to a node v is defined as the duration of a foremost u-v journey from time t 
        > Temporal Diameter
            - We say that a temporal graph D = (V,A) has temporal (or dynamic) diameter d, if d is the minimum integer for which it holds that the  
            temporal distance from every time-node (u,t) in V x {0, 1, ... \alpha - d} to every node v in V is at most d 
        

            



        
